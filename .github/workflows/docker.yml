name: Docker

on:
  workflow_dispatch:

concurrency:
  group: build-docker-${{ github.ref }}
  cancel-in-progress: true

env:
  NUXT_BASE_PATH: "/api"
  NUXT_USE_COOKIE_TOKEN: "1"
  CGO_ENABLED: "1"
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-frontend:
    name: Build Frontend
    runs-on: ubuntu-24.04
    outputs:
      fe_commit_hash: ${{ steps.build-fe.outputs.fe_commit_hash }}
    steps:
      - name: Clone repo
        run: git clone https://github.com/BANKA2017/tbsign_go_fe

      - uses: actions/setup-node@v4
        name: Setup Node
        with:
          node-version: 22
          cache: "yarn"
          cache-dependency-path: tbsign_go_fe/yarn.lock

      - name: Frontend
        id: build-fe
        run: |
          cd tbsign_go_fe
          fe_commit_hash=$(git rev-parse HEAD)
          export NUXT_COMMIT_HASH=$fe_commit_hash
          echo "fe_commit_hash=${fe_commit_hash}" >> "$GITHUB_OUTPUT"
          yarn install
          yarn run postinstall
          yarn run generate

      - name: Upload package
        uses: actions/upload-artifact@v4
        with:
          name: "tbsign_go.fe"
          path: tbsign_go_fe/.output/public/
          include-hidden-files: true
          compression-level: 9

  build-binary:
    name: Build Binary for ${{ matrix.arch.name }}
    strategy:
      matrix:
        arch:
          - name: arm64
            runs-on: ubuntu-24.04-arm
            compiler: /usr/bin/aarch64-linux-musl-gcc
          - name: amd64
            runs-on: ubuntu-24.04
            compiler: /usr/bin/x86_64-linux-musl-gcc
    runs-on: ${{ matrix.arch.runs-on }}
    needs: build-frontend
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - uses: actions/download-artifact@v4
        with:
          name: tbsign_go.fe
          path: assets/dist
      - uses: actions/setup-go@v5
        with:
          go-version: "1.24.2"
          cache-dependency-path: "go.sum"
      - name: Install musl libc
        run: sudo apt install -y musl-dev
      - name: Backend
        run: |
          fe_commit_hash=${{ needs.build-frontend.outputs.fe_commit_hash }}
          commit_hash=$(git rev-parse HEAD)
          short_commit_hash=${commit_hash:0:7}
          short_fe_commit_hash=${fe_commit_hash:0:7}
          build_prefix="tbsign_go.$(date +'%+4Y%m%d').$short_commit_hash.$short_fe_commit_hash"
          echo "build_prefix=${build_prefix}" >> "$GITHUB_ENV"
          build_at="$(date -Iseconds)"
          go_runtime=$(go version | sed 's/go version go[0-9]*\.[0-9]*\.[0-9]* //')
          PUBLISH_TYPE=docker
          ldflags="\
          -X 'github.com/BANKA2017/tbsign_go/share.BuiltAt=$build_at' \
          -X 'github.com/BANKA2017/tbsign_go/share.BuildRuntime=$go_runtime' \
          -X 'github.com/BANKA2017/tbsign_go/share.BuildGitCommitHash=$commit_hash' \
          -X 'github.com/BANKA2017/tbsign_go/share.BuildEmbeddedFrontendGitCommitHash=$fe_commit_hash' \
          -X 'github.com/BANKA2017/tbsign_go/share.BuildPublishType=$PUBLISH_TYPE' \
          -linkmode external -extldflags -static
          "
          CC=${{ matrix.arch.compiler }} go build -ldflags "$ldflags" -tags netgo

      - name: Upload package
        uses: actions/upload-artifact@v4
        with:
          name: "tbsign_go.musl.${{ matrix.arch.name }}.docker"
          path: tbsign_go

  combine-docker:
    name: Docker Build
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    needs:
      - build-binary
    steps:
      - name: Checkout
        uses: actions/checkout@master

      - uses: actions/download-artifact@v4

      # - name: Set Date Tag
      #   run: echo "DATE_TAG=$(date +'%Y%m%d')" >> "$GITHUB_ENV"

      - name: Set Up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set Up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Set Up Cache
        uses: actions/cache@v4
        id: buildx-cache
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx

      - name: Buildx
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
