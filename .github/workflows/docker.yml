name: Docker

on:
  workflow_dispatch:

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-arm64-binary:
    name: Build ARM64 Binary
    runs-on: ubuntu-24.04-arm
    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Build arm64-musl package
        run: |
          docker run --rm -v $(pwd):/app/tbsign -e CC=musl-gcc -e EXTERNAL_LDFLAGS="-linkmode external -extldflags -static" -w /app/tbsign alpine:3 sh -c "apk add --no-cache --upgrade nodejs npm go git gcc musl-dev && npm install -g corepack && corepack enable && chmod +x build.sh && sh ./build.sh"

      - name: Upload package
        uses: actions/upload-artifact@v4
        with:
          name: "tbsign_go.musl.arm64"
          path: tbsign_go

  build-amd64-binary:
    name: Build AMD64 Binary
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Build amd64-musl package
        run: |
          docker run --rm -v $(pwd):/app/tbsign -e CC=musl-gcc -e EXTERNAL_LDFLAGS="-linkmode external -extldflags -static" -w /app/tbsign alpine:3 sh -c "apk add --no-cache --upgrade nodejs npm go git gcc musl-dev && npm install -g corepack && corepack enable && chmod +x build.sh && sh ./build.sh"

      - name: Upload package
        uses: actions/upload-artifact@v4
        with:
          name: "tbsign_go.musl.amd64"
          path: tbsign_go

  combine:
    name: Docker Build
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    needs:
      - build-arm64-binary
      - build-amd64-binary
    steps:
      - name: Checkout
        uses: actions/checkout@master

      - uses: actions/download-artifact@v4

      - name: Set Up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set Up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Set Up Cache
        uses: actions/cache@v4
        id: buildx-cache
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx

      - name: Buildx
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
