name: Build

on:
  workflow_dispatch:

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

env:
  NUXT_BASE_PATH: "/api"
  CGO_ENABLED: "1"

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          # this might remove tools that are actually needed,
          # if set to "true" but frees about 6 GB
          tool-cache: false

          # all of these default to true, but feel free to set to
          # "false" if necessary for your workflow
          android: true
          dotnet: true
          haskell: true
          large-packages: false
          swap-storage: true
      - name: Init
        run: |
          git clone https://github.com/BANKA2017/tbsign_go_fe
          go install src.techknowlogick.com/xgo@latest
          go install github.com/mattn/go-sqlite3
      - name: Restore xgo Image Cache if it exists
        id: cache-docker-xgo
        uses: actions/cache@v3
        with:
          path: ci/cache/docker/xgo
          key: cache-docker-xgo-1.22.5

      - name: Update xgo Image Cache if cache miss
        if: steps.cache-docker-xgo.outputs.cache-hit != 'true'
        run: docker pull techknowlogick/xgo:go-1.22.5 && mkdir -p ci/cache/docker/xgo && docker image save techknowlogick/xgo:go-1.22.5 --output ./ci/cache/docker/xgo/xgo-1.22.5.tar

      - name: Use xgo Image Cache if cache hit
        if: steps.cache-docker-xgo.outputs.cache-hit == 'true'
        run: docker image load --input ./ci/cache/docker/xgo/xgo-1.22.5.tar

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'yarn'
          cache-dependency-path: tbsign_go_fe/yarn.lock
      - uses: actions/setup-go@v5
        with:
          go-version: 'stable'
          check-latest: true
          cache-dependency-path: 'go.sum'
      - name: Frontend
        run: |
          cd tbsign_go_fe
          commit_hash=$(git rev-parse HEAD)
          export NUXT_COMMIT_HASH=$commit_hash
          yarn install
          yarn run generate
          rm -r ../assets/dist
          cp -R .output/public/ ../assets/dist
      - name: Backend
        run: |
          mkdir build
          cd build
          commit_hash=$(git rev-parse HEAD)
          short_commit_hash=${commit_hash:0:7}
          build_prefix="tbsign_go.$(date +'%+4Y%m%d').$short_commit_hash"
          builtAt="$(date +'%+4Y-%m-%d %H:%M:%S %z')"
          goRuntime=$(go version | sed 's/go version go[0-9]*\.[0-9]*\.[0-9]* //')
          gitCommit=$(git rev-parse HEAD)
          ldflags="\
          -X 'github.com/BANKA2017/tbsign_go/share.BuiltAt=$builtAt' \
          -X 'github.com/BANKA2017/tbsign_go/share.BuildRuntime=$goRuntime' \
          -X 'github.com/BANKA2017/tbsign_go/share.BuildGitCommitHash=$gitCommit' \
          "
          $HOME/go/bin/xgo -out "$build_prefix" -ldflags "$ldflags" --targets=linux/amd64,linux/arm64,windows/amd64,windows/arm64,darwin/amd64,darwin/arm64 ../
      - name: Upload package
        uses: actions/upload-artifact@v4
        with:
          name: 'tbsign_go.all'
          path: build/*
