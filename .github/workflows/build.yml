name: Build

on:
  workflow_dispatch:

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

env:
  NUXT_BASE_PATH: "/api"
  CGO_ENABLED: "0"

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Init
        run: |
          git clone https://github.com/BANKA2017/tbsign_go_fe
          go install src.techknowlogick.com/xgo@v1.7.1-0.20241001173926-419a3c2a0387
          docker pull techknowlogick/xgo:go-1.23.1
      - uses: actions/setup-go@v5
        with:
          go-version: "1.23.1"
          cache-dependency-path: "go.sum"
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "yarn"
          cache-dependency-path: tbsign_go_fe/yarn.lock

      - name: Frontend
        run: |
          cd tbsign_go_fe
          fe_commit_hash=$(git rev-parse HEAD)
          export NUXT_COMMIT_HASH=$fe_commit_hash
          echo "fe_commit_hash=${fe_commit_hash}" >> "$GITHUB_ENV"
          yarn install
          yarn run postinstall
          yarn run generate
          rm -r ../assets/dist
          cp -R .output/public/ ../assets/dist
      - name: Backend
        run: |
          mkdir build
          cd build
          commit_hash=$(git rev-parse HEAD)
          short_commit_hash=${commit_hash:0:7}
          short_fe_commit_hash=${fe_commit_hash:0:7}
          build_prefix="tbsign_go.$(date +'%+4Y%m%d').$short_commit_hash.$short_fe_commit_hash"
          echo "build_prefix=${build_prefix}" >> "$GITHUB_ENV"
          builtAt="$(date -Iseconds)"
          goRuntime=$(go version | sed 's/go version go[0-9]*\.[0-9]*\.[0-9]* //')
          libc=$(go env CC)
          ldflags="\
          -X 'github.com/BANKA2017/tbsign_go/share.BuiltAt=$builtAt' \
          -X 'github.com/BANKA2017/tbsign_go/share.BuildRuntime=$goRuntime' \
          -X 'github.com/BANKA2017/tbsign_go/share.BuildGitCommitHash=$commit_hash' \
          -X 'github.com/BANKA2017/tbsign_go/share.BuildEmbeddedFrontendGitCommitHash=$fe_commit_hash' \
          -X 'github.com/BANKA2017/tbsign_go/share.BuildLibc=$libc' \
          "
          $HOME/go/bin/xgo -go go-1.23.1 -out "$build_prefix" -ldflags "$ldflags" -tags netgo --targets=linux/amd64,linux/arm64,windows/amd64,darwin/amd64,darwin/arm64 ../

      - name: Rename & SHA-256
        run: |
          mv "build/${build_prefix}-windows-4.0-amd64.exe" "build/${build_prefix}.windows-amd64.exe"
          echo "$(sha256sum build/${build_prefix}.windows-amd64.exe | awk '{print $1}')" >> "build/${build_prefix}.windows-amd64.exe.sha256"

          mv "build/${build_prefix}-linux-arm64" "build/${build_prefix}.linux-arm64"
          echo "$(sha256sum build/${build_prefix}.linux-arm64 | awk '{print $1}')" >> "build/${build_prefix}.linux-arm64.sha256"

          mv "build/${build_prefix}-linux-amd64" "build/${build_prefix}.linux-amd64"
          echo "$(sha256sum build/${build_prefix}.linux-amd64 | awk '{print $1}')" >> "build/${build_prefix}.linux-amd64.sha256"

          mv "build/${build_prefix}-darwin-10.12-arm64" "build/${build_prefix}.darwin-arm64"
          echo "$(sha256sum build/${build_prefix}.darwin-arm64 | awk '{print $1}')" >> "build/${build_prefix}.darwin-arm64.sha256"

          mv "build/${build_prefix}-darwin-10.12-amd64" "build/${build_prefix}.darwin-amd64"
          echo "$(sha256sum build/${build_prefix}.darwin-amd64 | awk '{print $1}')" >> "build/${build_prefix}.darwin-amd64.sha256"

      # - name: Upload package
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: 'tbsign_go.all'
      #     path: build/*
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: build/*
          prerelease: true
          fail_on_unmatched_files: true
          tag_name: ${{ env.build_prefix }}
          generate_release_notes: true
