name: Build

on:
  workflow_dispatch:

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

env:
  NUXT_BASE_PATH: "/api"
  CGO_ENABLED: "1"

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - name: Frontend
        run: |
          git clone https://github.com/BANKA2017/tbsign_go_fe
          cd tbsign_go_fe
          commit_hash=$(git rev-parse HEAD)
          export NUXT_COMMIT_HASH=$commit_hash
          yarn install
          yarn run generate
          rm -r ../assets/dist
          cp -R .output/public/ ../assets/dist
      - name: Backend
        run: |
          go install src.techknowlogick.com/xgo@latest
          mkdir build
          cd build
          commit_hash=$(git rev-parse HEAD)
          short_commit_hash=${commit_hash:0:7}
          build_prefix="tbsign_go.$(date +'%+4Y%m%d').$short_commit_hash"
          builtAt="$(date +'%+4Y-%m-%d %H:%M:%S %z')"
          goRuntime=$(go version | sed 's/go version go[0-9]*\.[0-9]*\.[0-9]* //')
          gitCommit=$(git rev-parse HEAD)
          ldflags="\
          -X 'github.com/BANKA2017/tbsign_go/share.BuiltAt=$builtAt' \
          -X 'github.com/BANKA2017/tbsign_go/share.BuildRuntime=$goRuntime' \
          -X 'github.com/BANKA2017/tbsign_go/share.BuildGitCommitHash=$gitCommit' \
          "
          $HOME/go/bin/xgo -out "$build_prefix" -ldflags "$ldflags" --targets=linux/amd64,linux/arm64,windows/amd64,windows/arm64,darwin/amd64,darwin/arm64 ../
      - name: Upload package
        uses: actions/upload-artifact@v4
        with:
          name: 'tbsign_go.all'
          path: build/*
